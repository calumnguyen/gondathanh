[{"/Volumes/HamChoiDrive/Personal/player/src/index.js":"1","/Volumes/HamChoiDrive/Personal/player/src/components/Nav.js":"2","/Volumes/HamChoiDrive/Personal/player/src/components/Player.js":"3","/Volumes/HamChoiDrive/Personal/player/src/components/Library.js":"4","/Volumes/HamChoiDrive/Personal/player/src/App.js":"5","/Volumes/HamChoiDrive/Personal/player/src/components/LibrarySongs.js":"6","/Volumes/HamChoiDrive/Personal/player/src/data.js":"7"},{"size":496,"mtime":1606804101000,"results":"8","hashOfConfig":"9"},{"size":1007,"mtime":1606812280000,"results":"10","hashOfConfig":"9"},{"size":4006,"mtime":1606810514000,"results":"11","hashOfConfig":"9"},{"size":764,"mtime":1606812638000,"results":"12","hashOfConfig":"9"},{"size":2279,"mtime":1606624331000,"results":"13","hashOfConfig":"9"},{"size":892,"mtime":1606623308000,"results":"14","hashOfConfig":"9"},{"size":2317,"mtime":1606717643000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ste7mw",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/HamChoiDrive/Personal/player/src/index.js",[],"/Volumes/HamChoiDrive/Personal/player/src/components/Nav.js",[],["32","33"],"/Volumes/HamChoiDrive/Personal/player/src/components/Player.js",["34"],"import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n  faHeart,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songs,\n  setSongs,\n  setSongInfo,\n  songInfo,\n  timeUpdateHandler,\n  songEndHandler,\n}) => {\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const actveLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    const currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      actveLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        actveLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      } else {\n        await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n        actveLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n      }\n    }\n\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <div className='player'>\n      <div className='time-control'>\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n          className='track'\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            type='range'\n            onChange={dragHandler}\n          />\n          <div className='animate-track' style={trackAnim}></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\n      </div>\n      <div className='play-control'>\n        <div className='liked-track'>\n          <FontAwesomeIcon\n            onClick={() => skipTrackHandler('skip-forward')}\n            icon={faHeart}\n            size='2x'\n            className={`${isAuthenticated ? 'active-heart' : 'inactive-heart'}`}\n          />\n\n          <p>1000</p>\n        </div>\n\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler('skip-back')}\n          icon={faAngleLeft}\n          size='2x'\n          className='skip-back'\n        />\n        <FontAwesomeIcon\n          icon={isPlaying ? faPause : faPlay}\n          size='2x'\n          className='play'\n          onClick={playSongHandler}\n        />\n\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler('skip-forward')}\n          icon={faAngleRight}\n          size='2x'\n          className='skip-forward'\n        />\n      </div>\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n","/Volumes/HamChoiDrive/Personal/player/src/components/Library.js",[],"/Volumes/HamChoiDrive/Personal/player/src/App.js",[],"/Volumes/HamChoiDrive/Personal/player/src/components/LibrarySongs.js",[],"/Volumes/HamChoiDrive/Personal/player/src/data.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]